방법론 선택 → 프로세스 정리
일을 할 때 큰 틀에서 세부적인 설계 방식으로 하는 것이 잘하는 것 = 전문가
내가 해야할 일을 목록으로 정리하고 시작하는 습관
문제 해결 - 문제들의 속성을 확인
머릿속으로 코드 시뮬레이션을 돌려보는 것을 많이 해봐야 한다
프로세스 정의 = 알고리즘

서버 증식 → 로드 밸런싱
Que-메모리
    traffic을 모아두는 파일을 만들고 순서대로 처리
    CPU만 처리 → 속도 빠름
    입출력 → 속도 느림 → 여러 개의 프로세스가 동시에 작동하도록 설계 → 비용 감소

Java
    1. data : 초기, 결과
    2. 문법
    3. 용어
    4. collection
        list, set, dictionary, map
    5. API
    6. IO(입출력)
    7. Network
    8. Thread
        7, 8 → 개발 F/W(FrameWork)

알고리즘 
    → 프로그래밍을 비교적 쉽게 할 수 있음
    필요한 s/w에 대한 방법론을 찾고 방법론의 절차대로 문제를 파악하고 해결하는 과정

    심부름 알고리즘
        CU에 가서 아이스크림 "누가바"를 사오는 것
        방법론 : MVC 
        꼬마에게 심부름 시키는 프로그램 개발
        결과 : 누가바
        초기 data : 1000원
        
        1~7단계로 설명 
        *data의 흐름(시작~끝 data가 끊기면 안됨)
        1) 편의점, 아이스크림 data 수집, 저장(모듈)
        2) 구매자 → 금액 입력(뷰)
        3) 금액에 맞는 아이스크림 찾음(컨트롤러)
        4) 찾은 아이스크림을 전달해줌(뷰)

        (우리집)
        1) 꼬마야 왼손!(선언)
        2) 왼손에 1000원 쥐어줌(대입)
        3) 아이스크림 사와라(명령, 입력값)
        (거리)
        4) CU 발견하고 찾아감
        (편의점)
        5) 점원에게 아이스크림"누가바" 주세요라고 요구(명령, 입력값)
        6) 아이스크림"누가바" 꺼내 옴
        7) 점원은 꼬마에게 "누가바"를 준다(입력받은 왼손 data에 대한 댓가로 주는 것)
        8. 꼬마는 점원이 준 아이스크림을 오른손에 받는다(왼손에 돈이 있기 때문)
        (우리집)
        9. 꼬마는 집에 와서 아이스크림을 나에게 준다(오른손에 있는 것 반환)
    
Java Developer Project
    Project Name : BuyIcecream(Java) ↔ buy_icecream(DB) → 전환 lib 사용
    Package name : test.buy
    Main-Class Name : TestBuy


설명할 수 있는 Ai
    모델을 설명할 수 있음 
    Ai 2.0 → 산업에는 안나옴, 모델을 설명할 수 있어야 함 → 이해 가능 → best 최적화 : 인공신경망(판단)의 연결들을 확인 
        기본적인 알고리즘 설계를 할 수 있어야 best 최적화 방법을 찾을 수 있음
    Ai 1.0 → 많이 학습하면 결과가 나온다는 사고
    큰 틀을 짜주는 Ai는 있음 → 실행시켜서 결과를 보고 조금씩 수정은 우리가 해야 함

utf-8 = 3byte set

코드를 작성할 때 한번에 모든 조건을 넣으려고 하지말고 처음에 틀을 만든 후 조금씩 채우는 방식으로 작성 → 체계적인 코딩
뷰 페이지
결재 페이지
클라우드에서 불러오기

CRM으로 고객관리 data를 관리해서 학습시키고 구매할 것 같은 사람에게는 결재페이지를 가져오고, 
구매를 안할 것 같은 사람은 뷰 페이지만 보여줘서 비용적으로 save 


컴파일러 환경 = 개발자 환경
    jdk, 파이썬
    소스를 테스트할 수 있는 환경

사용자 환경 = 동작
    jre

통합 환경 = 소스 코딩 + 동작
    이클립스
    주피터(RADE : 한줄씩 실행 → 에러를 즉시 볼 수 있음, 개발속도 빠름), 파이참(IDE) : 환경설정 필요, vscode
    아나콘다 : 비전공자들(수학, 물리)이 사용하는 툴
        아나콘다만 올드 repository 지원

colab : 주피터 대신 사용